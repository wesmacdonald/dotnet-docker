# This is a basic workflow to help you get started with Actions

name: aspnetapp-CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        image: [alpine-x64, windowsservercore-x64]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
         
      # Login to ACR
      - name: Docker Login action
        uses: azure/docker-login@v1
        with:
          login-server: safecontainersregistry.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}     
      
      # Run docker build
      - name: Run docker build
        run: |
          cd "samples/aspnetapp"
          docker build -f Dockerfile.${{ matrix.image }} -t safecontainersregistry.azurecr.io/asp-net-app:${{ github.sha }} 
      
      - name: Run docker scan
        run: |
          cd "samples/aspnetapp"
          docker scan --version
          #docker scan --login --token ${{ secrets.snyk_token }}
          #docker scan safecontainersregistry.azurecr.io/asp-net-app:${{ github.sha }} 
          
      - name: Scan images for vulnerabilities 
        uses: Azure/container-scan@v0         
        id: container-scan 
        continue-on-error: true 
        with:
          image-name: safecontainersregistry.azurecr.io/asp-net-app:${{ github.sha }} 
       
      - name: Push docker image to Azure Container Registry 
        run: | 
          docker push safecontainersregistry.azurecr.io/asp-net-app:${{ github.sha }}
      
      - name: Post logs to appinsights 
        uses: Azure/publish-security-assessments@v0 
        if: ${{ steps.container-scan.outputs.scan-report-path != null }}
        with: 
          scan-results-path: ${{steps.container-scan.outputs.scan-report-path}} 
          artifact-type: containerImage
          subscription-token: ${{ secrets.asc_subscription_token }}
          instrumentation-key: ${{ secrets.ai_instrumentation_key }}
          
